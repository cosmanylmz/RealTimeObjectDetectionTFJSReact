{"ast":null,"code":"var _jsxFileName = \"D:\\\\PatikaVeriYapilari\\\\PatikaVeriYapilari\\\\RealTimeObjectDetectionTFJSReact\\\\src\\\\App.js\";\n// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // Main function\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video);\n      console.log(obj); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    muted: true,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 8,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/PatikaVeriYapilari/PatikaVeriYapilari/RealTimeObjectDetectionTFJSReact/src/App.js"],"names":["React","useRef","useState","useEffect","tf","cocossd","Webcam","drawRect","App","webcamRef","canvasRef","runCoco","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","obj","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawRect } from \"./utilities\";\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    const net = await cocossd.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n      console.log(obj);\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawRect(obj, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    runCoco();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}